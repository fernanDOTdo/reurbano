{% extends '::frontend.html.twig' %}
{% block content %}
        <h1>{{ titulo }}</h1>
        {% if usuario %}
            <form action="{{ path('user_user_save',{ 'id':usuario.getId() }) }}" method="post" {{ form_enctype(form) }}>
        {% else %}
            <form action="{{ path('user_user_save') }}" method="post" {{ form_enctype(form) }}>
        {% endif%}
        
    {{ form_widget(form) }}
            <input type="submit" name='salvar' value='{{ "Salvar"|trans }}' />
            <input type="button" name='voltar' value='{{ "Voltar"|trans }}' onclick="history.go(-1)" />
            
            <div style='margin-top:10px'><div id="fb-root"></div></div>
        <script type="text/javascript">
            window.fbAsyncInit = function() {
                FB.init({
                    appId: '{{ mastop_param('user.all.faceappid') }}',
                    status: true,
                    cookie: true,
                    xfbml: true
                });
                /* initialize FacebookConnect object */
                FacebookConnect.init(
                        '{{ url('_home') }}',
                        true,
                        '{{ "Para poder utilizar o login integrado do Facebook, vocÃª precisa permitir que nosso site se comunique com seu Facebook."|trans }}',
                        '{{ "Login invalido, Por favor tente mais tarde"|trans }}'
                );
                
            };

            (function() {
                var e = document.createElement('script'); e.async = true;
                e.src = document.location.protocol + '//connect.facebook.net/pt_BR/all.js';
                document.getElementById('fb-root').appendChild(e);
            }());


var FacebookConnect = {
    status: 'unknown',
    baseUrl: '',
    loggedIn: false,
    user: '',
    genericErrorText: '',
    permissionErrorText: '',
    init: function (url, isLoggedIn, permissionText, genericText) {
        FacebookConnect.baseUrl = url;
        FacebookConnect.loggedIn = isLoggedIn;
        FacebookConnect.permissionErrorText = permissionText;
        FacebookConnect.genericErrorText = genericText;
        FB.getLoginStatus(function (response) {
            status = response.status;
            if (!FacebookConnect.loggedIn && status == 'connected') {
                var callback = function (json) {
                        if (json.success) {
                            window.location.href=url;
                        }
                    }
                FacebookConnect.loginHandler(callback);
            }
        }, true);
    },
    connect: function () {
        
        FacebookConnect.toggleFacebookError(false);
        var newStatus = 'unknown';
        FB.getLoginStatus(function (response) {
            newStatus = response.status;
            if (newStatus == 'notConnected') {
                FacebookConnect.toggleFacebookError(true, FacebookConnect.permissionErrorText);
            } else if (newStatus == 'connected') {
                var callback = function (json) {
                        if (json.success) {
                            FacebookConnect.forwardUser(json.url);
                        } else {
                            FacebookConnect.toggleFacebookError(true, FacebookConnect.genericErrorText)
                        }
                    }
                FacebookConnect.loginHandler(callback, response.session.access_token);
            }
            status = newStatus;
        }, true);
    },
    loginHandler: function (callback, securityToken) {
        FB.api('/me', function (user) {
            if (user != null) {
                FacebookConnect.user = user;
                /*DEBUG TABAJARA*/
                console.log('user: ', user);
                /* /DEBUG TABAJARA*/
                var params = {
                    'facebookLogin': user.username,
                    'facebookId': user.id,
                    'email': user.email,
                    'firstName': user.first_name,
                    'lastName': user.last_name,
                    'cidade': user.location.name,
                    'returnJson': 'true',
                    'gender': user.gender,
                    'facebookToken': securityToken
                };
                $.ajax({
                    url: '{{url("user_user_facebook")}}',
                    data: params,
                    dataType: "json",
                    contentType: 'application/x-www-form-urlencoded; charset=utf-8',
                    scriptCharset: 'utf-8',
                    success: callback,
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        FacebookConnect.toggleFacebookError(true, FacebookConnect.genericErrorText);
                    }
                });
            }
        });
    },
    toggleFacebookError: function (showError, errorText) {
        if (showError) {
            $('#facebookError li').html(errorText);
            $('#facebookError').show();
        } else {
            $('#facebookError').hide();
        }
    },
    forwardUser: function (url) {
         if (url) {
            window.location.href = url;
        } else {
            window.location.href = FacebookConnect.baseUrl;
        }
    }
}

            </script>
        <fb:login-button perms="user_about_me,email" onlogin="FacebookConnect.connect(false);">Conecte-se</fb:login-button>
        <span class="facebookText"><small>{{"Tem uma conta no Facebook? Use-a para fazer o seu login no %sitename%"|trans ({"%sitename%":mastop_param('system.site.name')}) }}</small></span>
            
            
        </form>
{% endblock content %}  
{% block javascripts %}
        <script type="text/javascript" src="{{ path('user_user_script') }}"></script>
        {% javascripts output='qualquer/coisa.js' 
                '@ReurbanoUserBundle/Resources/public/js/Frontend/newUser.js' %}
    <script type="text/javascript" src="{{ asset_url }}"></script>
{% endjavascripts %}
{% endblock %}